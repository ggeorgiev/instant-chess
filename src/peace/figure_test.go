package peace

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestFigureColor(t *testing.T) {
	assert.Equal(t, WhitePawn.Color(), WhiteColor)
	assert.Equal(t, WhiteBishop.Color(), WhiteColor)
	assert.Equal(t, WhiteKnight.Color(), WhiteColor)
	assert.Equal(t, WhiteRook.Color(), WhiteColor)
	assert.Equal(t, WhiteQueen.Color(), WhiteColor)
	assert.Equal(t, WhiteKing.Color(), WhiteColor)

	assert.Equal(t, BlackPawn.Color(), BlackColor)
	assert.Equal(t, BlackBishop.Color(), BlackColor)
	assert.Equal(t, BlackKnight.Color(), BlackColor)
	assert.Equal(t, BlackRook.Color(), BlackColor)
	assert.Equal(t, BlackQueen.Color(), BlackColor)
	assert.Equal(t, BlackKing.Color(), BlackColor)
}

func TestFigureIsWhite(t *testing.T) {
	assert.False(t, NoFigure.IsWhite())
	assert.True(t, WhitePawn.IsWhite())
	assert.True(t, WhiteBishop.IsWhite())
	assert.True(t, WhiteKnight.IsWhite())
	assert.True(t, WhiteRook.IsWhite())
	assert.True(t, WhiteQueen.IsWhite())
	assert.True(t, WhiteKing.IsWhite())
	assert.False(t, BlackPawn.IsWhite())
	assert.False(t, BlackBishop.IsWhite())
	assert.False(t, BlackKnight.IsWhite())
	assert.False(t, BlackRook.IsWhite())
	assert.False(t, BlackQueen.IsWhite())
	assert.False(t, BlackKing.IsWhite())
}

func TestFigureIsBlack(t *testing.T) {
	assert.False(t, NoFigure.IsBlack())
	assert.False(t, WhitePawn.IsBlack())
	assert.False(t, WhiteBishop.IsBlack())
	assert.False(t, WhiteKnight.IsBlack())
	assert.False(t, WhiteRook.IsBlack())
	assert.False(t, WhiteQueen.IsBlack())
	assert.False(t, WhiteKing.IsBlack())
	assert.True(t, BlackPawn.IsBlack())
	assert.True(t, BlackBishop.IsBlack())
	assert.True(t, BlackKnight.IsBlack())
	assert.True(t, BlackRook.IsBlack())
	assert.True(t, BlackQueen.IsBlack())
	assert.True(t, BlackKing.IsBlack())
}

func TestFigureIsNoFigureOrNot(t *testing.T) {
	assert.True(t, NoFigure.IsNoFigureOrWhite())
	assert.True(t, WhitePawn.IsNoFigureOrWhite())
	assert.True(t, WhiteBishop.IsNoFigureOrWhite())
	assert.True(t, WhiteKnight.IsNoFigureOrWhite())
	assert.True(t, WhiteRook.IsNoFigureOrWhite())
	assert.True(t, WhiteQueen.IsNoFigureOrWhite())
	assert.True(t, WhiteKing.IsNoFigureOrWhite())
	assert.False(t, BlackPawn.IsNoFigureOrWhite())
	assert.False(t, BlackBishop.IsNoFigureOrWhite())
	assert.False(t, BlackKnight.IsNoFigureOrWhite())
	assert.False(t, BlackRook.IsNoFigureOrWhite())
	assert.False(t, BlackQueen.IsNoFigureOrWhite())
	assert.False(t, BlackKing.IsNoFigureOrWhite())

	assert.True(t, NoFigure.IsNoFigureOrBlack())
	assert.False(t, WhitePawn.IsNoFigureOrBlack())
	assert.False(t, WhiteBishop.IsNoFigureOrBlack())
	assert.False(t, WhiteKnight.IsNoFigureOrBlack())
	assert.False(t, WhiteRook.IsNoFigureOrBlack())
	assert.False(t, WhiteQueen.IsNoFigureOrBlack())
	assert.False(t, WhiteKing.IsNoFigureOrBlack())
	assert.True(t, BlackPawn.IsNoFigureOrBlack())
	assert.True(t, BlackBishop.IsNoFigureOrBlack())
	assert.True(t, BlackKnight.IsNoFigureOrBlack())
	assert.True(t, BlackRook.IsNoFigureOrBlack())
	assert.True(t, BlackQueen.IsNoFigureOrBlack())
	assert.True(t, BlackKing.IsNoFigureOrBlack())

	assert.True(t, NoFigure.IsNoFigureOrNot(WhiteColor))
	assert.False(t, WhitePawn.IsNoFigureOrNot(WhiteColor))
	assert.False(t, WhiteBishop.IsNoFigureOrNot(WhiteColor))
	assert.False(t, WhiteKnight.IsNoFigureOrNot(WhiteColor))
	assert.False(t, WhiteRook.IsNoFigureOrNot(WhiteColor))
	assert.False(t, WhiteQueen.IsNoFigureOrNot(WhiteColor))
	assert.False(t, WhiteKing.IsNoFigureOrNot(WhiteColor))
	assert.True(t, BlackPawn.IsNoFigureOrNot(WhiteColor))
	assert.True(t, BlackBishop.IsNoFigureOrNot(WhiteColor))
	assert.True(t, BlackKnight.IsNoFigureOrNot(WhiteColor))
	assert.True(t, BlackRook.IsNoFigureOrNot(WhiteColor))
	assert.True(t, BlackQueen.IsNoFigureOrNot(WhiteColor))
	assert.True(t, BlackKing.IsNoFigureOrNot(WhiteColor))

	assert.True(t, NoFigure.IsNoFigureOrNot(BlackColor))
	assert.True(t, WhitePawn.IsNoFigureOrNot(BlackColor))
	assert.True(t, WhiteBishop.IsNoFigureOrNot(BlackColor))
	assert.True(t, WhiteKnight.IsNoFigureOrNot(BlackColor))
	assert.True(t, WhiteRook.IsNoFigureOrNot(BlackColor))
	assert.True(t, WhiteQueen.IsNoFigureOrNot(BlackColor))
	assert.True(t, WhiteKing.IsNoFigureOrNot(BlackColor))
	assert.False(t, BlackPawn.IsNoFigureOrNot(BlackColor))
	assert.False(t, BlackBishop.IsNoFigureOrNot(BlackColor))
	assert.False(t, BlackKnight.IsNoFigureOrNot(BlackColor))
	assert.False(t, BlackRook.IsNoFigureOrNot(BlackColor))
	assert.False(t, BlackQueen.IsNoFigureOrNot(BlackColor))
	assert.False(t, BlackKing.IsNoFigureOrNot(BlackColor))
}

func TestFigureIsLinearMover(t *testing.T) {
	assert.False(t, NoFigure.IsLinearMover())
	assert.False(t, WhitePawn.IsLinearMover())
	assert.False(t, WhiteBishop.IsLinearMover())
	assert.False(t, WhiteKnight.IsLinearMover())
	assert.True(t, WhiteRook.IsLinearMover())
	assert.True(t, WhiteQueen.IsLinearMover())
	assert.False(t, WhiteKing.IsLinearMover())
	assert.False(t, BlackPawn.IsLinearMover())
	assert.False(t, BlackBishop.IsLinearMover())
	assert.False(t, BlackKnight.IsLinearMover())
	assert.True(t, BlackRook.IsLinearMover())
	assert.True(t, BlackQueen.IsLinearMover())
	assert.False(t, BlackKing.IsLinearMover())

	assert.False(t, NoFigure.IsLinearMoverFrom(WhiteColor))
	assert.False(t, WhitePawn.IsLinearMoverFrom(WhiteColor))
	assert.False(t, WhiteBishop.IsLinearMoverFrom(WhiteColor))
	assert.False(t, WhiteKnight.IsLinearMoverFrom(WhiteColor))
	assert.True(t, WhiteRook.IsLinearMoverFrom(WhiteColor))
	assert.True(t, WhiteQueen.IsLinearMoverFrom(WhiteColor))
	assert.False(t, WhiteKing.IsLinearMoverFrom(WhiteColor))
	assert.False(t, BlackPawn.IsLinearMoverFrom(WhiteColor))
	assert.False(t, BlackBishop.IsLinearMoverFrom(WhiteColor))
	assert.False(t, BlackKnight.IsLinearMoverFrom(WhiteColor))
	assert.False(t, BlackRook.IsLinearMoverFrom(WhiteColor))
	assert.False(t, BlackQueen.IsLinearMoverFrom(WhiteColor))
	assert.False(t, BlackKing.IsLinearMoverFrom(WhiteColor))

	assert.False(t, NoFigure.IsLinearMoverFrom(BlackColor))
	assert.False(t, WhitePawn.IsLinearMoverFrom(BlackColor))
	assert.False(t, WhiteBishop.IsLinearMoverFrom(BlackColor))
	assert.False(t, WhiteKnight.IsLinearMoverFrom(BlackColor))
	assert.False(t, WhiteRook.IsLinearMoverFrom(BlackColor))
	assert.False(t, WhiteQueen.IsLinearMoverFrom(BlackColor))
	assert.False(t, WhiteKing.IsLinearMoverFrom(BlackColor))
	assert.False(t, BlackPawn.IsLinearMoverFrom(BlackColor))
	assert.False(t, BlackBishop.IsLinearMoverFrom(BlackColor))
	assert.False(t, BlackKnight.IsLinearMoverFrom(BlackColor))
	assert.True(t, BlackRook.IsLinearMoverFrom(BlackColor))
	assert.True(t, BlackQueen.IsLinearMoverFrom(BlackColor))
	assert.False(t, BlackKing.IsLinearMoverFrom(BlackColor))

	assert.False(t, NoFigure.IsWhiteLinearMover())
	assert.False(t, WhitePawn.IsWhiteLinearMover())
	assert.False(t, WhiteBishop.IsWhiteLinearMover())
	assert.False(t, WhiteKnight.IsWhiteLinearMover())
	assert.True(t, WhiteRook.IsWhiteLinearMover())
	assert.True(t, WhiteQueen.IsWhiteLinearMover())
	assert.False(t, WhiteKing.IsWhiteLinearMover())
	assert.False(t, BlackPawn.IsWhiteLinearMover())
	assert.False(t, BlackBishop.IsWhiteLinearMover())
	assert.False(t, BlackKnight.IsWhiteLinearMover())
	assert.False(t, BlackRook.IsWhiteLinearMover())
	assert.False(t, BlackQueen.IsWhiteLinearMover())
	assert.False(t, BlackKing.IsWhiteLinearMover())

	assert.False(t, NoFigure.IsBlackLinearMover())
	assert.False(t, WhitePawn.IsBlackLinearMover())
	assert.False(t, WhiteBishop.IsBlackLinearMover())
	assert.False(t, WhiteKnight.IsBlackLinearMover())
	assert.False(t, WhiteRook.IsBlackLinearMover())
	assert.False(t, WhiteQueen.IsBlackLinearMover())
	assert.False(t, WhiteKing.IsBlackLinearMover())
	assert.False(t, BlackPawn.IsBlackLinearMover())
	assert.False(t, BlackBishop.IsBlackLinearMover())
	assert.False(t, BlackKnight.IsBlackLinearMover())
	assert.True(t, BlackRook.IsBlackLinearMover())
	assert.True(t, BlackQueen.IsBlackLinearMover())
	assert.False(t, BlackKing.IsBlackLinearMover())

}

func TestFigureIsDiagonalMover(t *testing.T) {
	assert.False(t, NoFigure.IsDiagonalMover())
	assert.False(t, WhitePawn.IsDiagonalMover())
	assert.True(t, WhiteBishop.IsDiagonalMover())
	assert.False(t, WhiteKnight.IsDiagonalMover())
	assert.False(t, WhiteRook.IsDiagonalMover())
	assert.True(t, WhiteQueen.IsDiagonalMover())
	assert.False(t, WhiteKing.IsDiagonalMover())
	assert.False(t, BlackPawn.IsDiagonalMover())
	assert.True(t, BlackBishop.IsDiagonalMover())
	assert.False(t, BlackKnight.IsDiagonalMover())
	assert.False(t, BlackRook.IsDiagonalMover())
	assert.True(t, BlackQueen.IsDiagonalMover())
	assert.False(t, BlackKing.IsDiagonalMover())

	assert.False(t, NoFigure.IsDiagonalMoverFrom(WhiteColor))
	assert.False(t, WhitePawn.IsDiagonalMoverFrom(WhiteColor))
	assert.True(t, WhiteBishop.IsDiagonalMoverFrom(WhiteColor))
	assert.False(t, WhiteKnight.IsDiagonalMoverFrom(WhiteColor))
	assert.False(t, WhiteRook.IsDiagonalMoverFrom(WhiteColor))
	assert.True(t, WhiteQueen.IsDiagonalMoverFrom(WhiteColor))
	assert.False(t, WhiteKing.IsDiagonalMoverFrom(WhiteColor))
	assert.False(t, BlackPawn.IsDiagonalMoverFrom(WhiteColor))
	assert.False(t, BlackBishop.IsDiagonalMoverFrom(WhiteColor))
	assert.False(t, BlackKnight.IsDiagonalMoverFrom(WhiteColor))
	assert.False(t, BlackRook.IsDiagonalMoverFrom(WhiteColor))
	assert.False(t, BlackQueen.IsDiagonalMoverFrom(WhiteColor))
	assert.False(t, BlackKing.IsDiagonalMoverFrom(WhiteColor))

	assert.False(t, NoFigure.IsDiagonalMoverFrom(BlackColor))
	assert.False(t, WhitePawn.IsDiagonalMoverFrom(BlackColor))
	assert.False(t, WhiteBishop.IsDiagonalMoverFrom(BlackColor))
	assert.False(t, WhiteKnight.IsDiagonalMoverFrom(BlackColor))
	assert.False(t, WhiteRook.IsDiagonalMoverFrom(BlackColor))
	assert.False(t, WhiteQueen.IsDiagonalMoverFrom(BlackColor))
	assert.False(t, WhiteKing.IsDiagonalMoverFrom(BlackColor))
	assert.False(t, BlackPawn.IsDiagonalMoverFrom(BlackColor))
	assert.True(t, BlackBishop.IsDiagonalMoverFrom(BlackColor))
	assert.False(t, BlackKnight.IsDiagonalMoverFrom(BlackColor))
	assert.False(t, BlackRook.IsDiagonalMoverFrom(BlackColor))
	assert.True(t, BlackQueen.IsDiagonalMoverFrom(BlackColor))
	assert.False(t, BlackKing.IsDiagonalMoverFrom(BlackColor))
}

func TestFigureIsRook(t *testing.T) {
	assert.False(t, NoFigure.IsRook())
	assert.False(t, WhitePawn.IsRook())
	assert.False(t, WhiteBishop.IsRook())
	assert.False(t, WhiteKnight.IsRook())
	assert.True(t, WhiteRook.IsRook())
	assert.False(t, WhiteQueen.IsRook())
	assert.False(t, WhiteKing.IsRook())
	assert.False(t, BlackPawn.IsRook())
	assert.False(t, BlackBishop.IsRook())
	assert.False(t, BlackKnight.IsRook())
	assert.True(t, BlackRook.IsRook())
	assert.False(t, BlackQueen.IsRook())
	assert.False(t, BlackKing.IsRook())
}

func TestFigureIsQueen(t *testing.T) {
	assert.False(t, NoFigure.IsQueen())
	assert.False(t, WhitePawn.IsQueen())
	assert.False(t, WhiteBishop.IsQueen())
	assert.False(t, WhiteKnight.IsQueen())
	assert.False(t, WhiteRook.IsQueen())
	assert.True(t, WhiteQueen.IsQueen())
	assert.False(t, WhiteKing.IsQueen())
	assert.False(t, BlackPawn.IsQueen())
	assert.False(t, BlackBishop.IsQueen())
	assert.False(t, BlackKnight.IsQueen())
	assert.False(t, BlackRook.IsQueen())
	assert.True(t, BlackQueen.IsQueen())
	assert.False(t, BlackKing.IsQueen())
}

func TestFigureIsKing(t *testing.T) {
	assert.False(t, NoFigure.IsKing())
	assert.False(t, WhitePawn.IsKing())
	assert.False(t, WhiteBishop.IsKing())
	assert.False(t, WhiteKnight.IsKing())
	assert.False(t, WhiteRook.IsKing())
	assert.False(t, WhiteQueen.IsKing())
	assert.True(t, WhiteKing.IsKing())
	assert.False(t, BlackPawn.IsKing())
	assert.False(t, BlackBishop.IsKing())
	assert.False(t, BlackKnight.IsKing())
	assert.False(t, BlackRook.IsKing())
	assert.False(t, BlackQueen.IsKing())
	assert.True(t, BlackKing.IsKing())
}
